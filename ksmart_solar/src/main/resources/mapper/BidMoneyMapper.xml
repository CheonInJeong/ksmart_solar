<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Config 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cafe24.kangk0269.dao.BidMoneyMapper">
	<resultMap type="BidMoneyDTO" id="bidmoneyResultMap">
		<result property="bMoCode" 			column="b_mo_code"/>
		<result property="relatedCode" 		column="related_code"/>
		<result property="mId" 				column="m_id"/>
		<result property="bMoType" 			column="b_mo_type"/>
		<result property="relatedTable" 	column="related_table"/>
		<result property="bMoAmount" 		column="b_mo_amount"/>
		<result property="bMoDetail" 		column="b_mo_detail"/>
		<result property="mIdManager" 		column="m_id_manager"/>
		<result property="bMoTotalmoney"	column="b_mo_totalmoney"/>
		<result property="bMoDate" 			column="b_mo_date"/>
	</resultMap>
	
	<!-- 입출금 내역 입력 -->
	<insert id="addBidMoney" parameterType="MoneyCheckDTO">
		INSERT INTO tb_bid_money(
		b_mo_code
		, related_code
		, m_id
		, b_mo_type
		, related_table
		, b_mo_amount
		, b_mo_detail
		, m_id_manager
		, b_mo_totalmoney
		, b_mo_date
		)
		VALUES (
		sf_new_b_mo_code(#{inoutDate})
		, #{Code}
		, #{Id}
		, #{iOut}
		, case SUBSTR(#{Code},1,5)
		  when 'deout' then '예치금출금'
		  when 'payin' then	'대금납부'
		  when 'payou' then	'거래완료출금'
		  ELSE '입찰자신청'
		  end
		, #{money}
		, case SUBSTR(#{Code},1,5)
		  when 'deout' then '입찰예치금환불'
		  when 'payin' then	'거래대금입금'
		  when 'payou' then	'거래대금출금'
		  ELSE '입찰예치금입금'
		  end
		, 'id001'
		, sf_new_b_mo_totalmoney(#{money},#{iOut})
		, #{inoutDate}
		)
	</insert>
	
	<!-- 예치금 입금 : 입찰자 테이블 업데이트 -->
	<update id="modifyBidDepositIn" parameterType="BidListDTO">
		UPDATE tb_bid_list
		SET
			b_deposit_check = 'Y',
			b_mo_code = sf_new_b_mo_code(#{bDepositDate}),
			b_deposit_date = #{bDepositDate},
			tr_type_code = 3,
			tr_type_name = '입찰성공',
			b_date_up = NOW()
		WHERE b_code = #{bCode}
	</update>
	
	<!-- 예치금 입금 : 발전소매각공고신청 테이블 업데이트 -->
	<update id="modifyPlantDepositIn" parameterType="BidPlantDTO">
		UPDATE tb_bid_plant
		SET
			b_pl_number_of_bidder = sf_b_number_of_bidder_update(#{bPlCode})
		WHERE b_pl_code = #{bPlCode}
	</update>
	
	<!-- 예치금 입금 : 부품매각공고신청 테이블 업데이트 -->
	<update id="modifyComDepositIn" parameterType="BidComponentDTO">
		UPDATE tb_bid_component
		SET
			b_cp_bidder_number = sf_b_number_of_bidder_update(#{bCpCode})
		WHERE b_cp_code = #{bCpCode}
	</update>
	
	<!-- 대금 입금 : 거래대금납부 테이블 업데이트 -->
	<update id="modifyPayIn" parameterType="TradePaymentInDTO">
		UPDATE tb_trade_payment_in
		SET
			tr_payin_check = 'Y',
			b_mo_code = (
						SELECT 
							b_mo_code
						FROM 
							tb_bid_money
						WHERE related_code = #{trPayinCode}
						),
			b_mo_date = #{bMoDate},
			tr_payin_status = '납부완료'
		WHERE tr_payin_code = #{trPayinCode}
	</update>
	
	<!-- 대금 입금 : 낙찰자우선순위 테이블 업데이트 -->
	<update id="modifyPriPayIn" parameterType="TradePaymentInDTO">
		UPDATE tb_trade_priority
		SET
		tr_type_code = 14,
		tr_type_name = '공고최종완료',
		tr_pr_date_up = NOW()
		WHERE tr_pr_code=(	SELECT
							*
							FROM 
							(	SELECT
									a.tr_pr_code
								FROM
									tb_trade_priority AS a
									INNER JOIN 
									tb_trade_payment_in AS b
									ON 
									a.tr_pr_code = b.tr_pr_code
								WHERE b.tr_payin_code = #{trPayinCode}) AS r)
	</update>
	
	<!-- 대금 입금 : 입찰자 테이블 업데이트 -->
	<update id="modifyBidPayIn" parameterType="TradePaymentInDTO">
		UPDATE tb_bid_list
		SET
			tr_type_code = 14,
			tr_type_name = '공고최종완료',
			b_date_up = NOW()
		WHERE b_code=(	SELECT 
						*
						FROM 
							(
								SELECT
									b.b_code
								FROM
									tb_bid_list AS a
									INNER JOIN 
									tb_trade_payment_in AS b
									ON 
									a.b_code = b.b_code
								WHERE b.tr_payin_code = #{trPayinCode}
	
							) AS r)
	</update>
	
	<!-- 대금 입금 : 발전소매각공고신청 테이블 업데이트 -->
	<update id="modifyPlantPayIn" parameterType="BidPlantDTO">
		UPDATE tb_bid_plant
		SET
			b_pl_status = '거래완료',
			ac_status_code = 7
		WHERE b_pl_code = #{bPlCode}
	</update>
	
	<!-- 대금 입금 : 부품매각공고신청 테이블 업데이트 -->
	<update id="modifyComPayIn" parameterType="BidComponentDTO">
		UPDATE tb_bid_component
		SET
			b_cp_status = '거래완료',
			ac_status_code = 7
		WHERE b_cp_code = #{bCpCode}
	</update>
	
	<!-- 대금 입금 : 입금자가 1순위일 경우 2순위는 ?: 입찰자 테이블 업데이트(진행상태코드,진행상태,상태변경일,예치금환불가능여부) -->
	<update id="modifyBidPayInPri12" parameterType="String">
		UPDATE tb_bid_list
		SET
			tr_type_code = 10,
			tr_type_name = '계약종료',
			b_deposit_available = 'Y',
			b_date_up = NOW()
		WHERE announced_code = #{announcedCode} AND b_rank = 2
	</update>
	
	<!-- 대금 입금 : 입금자가 1순위일 경우 그외 순위? : 입찰자 테이블 업데이트(예치금환불가능여부) -->
	<update id="modifyBidPayInPri1ex" parameterType="String">
		UPDATE tb_bid_list
		SET
			b_deposit_available = 'Y'
		WHERE announced_code = #{announcedCode} AND b_rank IS NULL AND b_deposit_check = 'Y' AND b_deposit_available = 'N' AND b_deposit_refund = 'N'
	</update>
	
	<!-- 대금 입금 : 입금자가 2순위일 경우 1순위는? : 입찰자 테이블 업데이트(예치금환불가능여부) -->
	<update id="modifyBidPayInPri21" parameterType="String">
		UPDATE tb_bid_list
		SET
			b_deposit_available = 'N'
		WHERE announced_code = #{announcedCode} AND b_rank = 1
	</update>
	
	<!-- 대금 입금 : 입금자가 2순위일 경우 그외 순위? : 입찰자 테이블 업데이트(예치금환불가능여부 : Y) -->
	<update id="modifyBidPayInPri2ex" parameterType="String">
		UPDATE tb_bid_list
		SET
			b_deposit_available = 'Y'
		WHERE announced_code = #{announcedCode} AND b_rank IS NULL AND b_deposit_check = 'Y' AND b_deposit_available = 'N' AND b_deposit_refund = 'N'
	</update>
	
	<!-- 예치금 환불 : 예치금출금신청 테이블 업데이트 -->
	<update id="modifyDepositOut" parameterType="TradeDepositOutDTO">
		UPDATE tb_trade_deposit_out
		SET
			b_mo_code = (
						SELECT
							b_mo_code
						FROM
							tb_bid_money
						WHERE related_code = #{trDepCode}
						)
		WHERE tr_dep_code = #{trDepCode}
	</update>
	
	<!-- 예치금 환불 : 입찰자 테이블 업데이트 -->
	<update id="modifyBidDepositOut" parameterType="TradeDepositOutDTO">
		UPDATE tb_bid_list
		SET
			b_deposit_refund = 'Y'
		WHERE b_code = (	
							SELECT 
							*
							FROM 
							(
								SELECT
									a.b_code
								FROM
									tb_trade_deposit_out AS a
									INNER JOIN 
									tb_bid_list AS b
									ON 
									a.b_code = b.b_code
								WHERE a.tr_dep_code = #{trDepCode}
							) AS r
						)
	</update>
	
	<!-- 대금 출금 : 거래대금출금신청 테이블 업데이트 -->
	<update id="modifyPayOut" parameterType="TradePaymentOutDTO">
		UPDATE tb_trade_payment_out
		SET
			b_mo_code = sf_new_b_mo_code(#{trPayoutWdDate})
		WHERE tr_payout_code = #{trPayoutCode}
	</update>
	
	<!-- 확인 입출금 개별(미완료) -->
	<select id="getMoneyCheck" resultType="MoneyCheckDTO">
		SELECT
			result.Code											AS Code
			, result.nCode										AS nCode
			, result.nTitle										AS nTitle
			, result.Id											AS Id
			, result.money										AS money
			, if(SUBSTR(result.Code,INSTR(result.Code,'o'),3)='out','출금','입금') AS iOut
			, result.startDate									AS startDate
			, result.endDate									AS endDate
			, result.inoutCheck									AS inoutCheck
			, result.inoutDate									AS inoutDate
			, result.bankName									AS bankName
			, result.accountNumber								AS accountNumber
			, result.accountName								AS accountName
			, result.moCode										AS moCode
			, result.admitDate									AS admitDate
		FROM 
			(
			SELECT 
				b_code													AS Code
				, announced_code										AS nCode
				, b_title												AS nTitle
				, a.m_id												AS Id
				, b_deposit												AS money
				, IFNULL(m.b_cp_date_bidding1, n.b_pl_date_bidding1)	AS startDate
				, IFNULL(m.b_cp_date_bidding2, n.b_pl_date_bidding2)	AS endDate
				, b_deposit_check										AS inoutCheck
				, b_deposit_date										AS inoutDate
				, a.m_account_bank_name									AS bankName
				, a.m_account_number								AS accountNumber
				, a.m_payment_name										AS accountName
				, a.b_mo_code											AS moCode
				, a.b_date												AS admitDate
			FROM 
				tb_bid_list	AS a
				LEFT JOIN 
				tb_bid_money AS i
				ON 
				a.b_mo_code = i.b_mo_code
				left JOIN 
				tb_bid_component AS m
				ON 
				a.announced_code = m.b_cp_code
				LEFT JOIN 
				tb_bid_plant AS n
				ON 
				a.announced_code = n.b_pl_code
			WHERE a.tr_type_name != '입찰실패'
			UNION ALL 
			SELECT
				tr_payin_code				AS Code
				, b.announced_code			AS nCode
				, g.announced_title			AS nTitle
				, b.m_id_buyer				AS Id
				, tr_payin_price			AS money
				, b.tr_payin_date1			AS startDAte
				, b.tr_payin_date2			AS endDate
				, b.tr_payin_check			AS inoutCheck
				, b.b_mo_date				AS inoutDate
				, m_account_bank_name		AS bankName
				, m_account_number			AS accountNumber
				, m_payment_name			AS accountName
				, b.b_mo_code				AS moCode
				, b.tr_payin_date1			AS admitDate
			FROM 
				tb_trade_payment_in AS b
				INNER JOIN 
				tb_trade_priority AS g
				ON
				b.tr_pr_code = g.tr_pr_code
				LEFT JOIN 
				tb_bid_money AS j
				ON 
				b.b_mo_code = j.b_mo_code
			WHERE b.tr_payin_status != '미납'
			UNION ALL 
			SELECT 
				tr_payout_code				AS Code
				, d.announced_code			AS nCode
				, d.announced_title			AS nTitle
				, c.m_id					AS Id
				, tr_payout_price_real		AS money
				, o.b_mo_date				AS startDate
				, c.tr_payout_wd_date		AS endDate
				, c.tr_payout_check			AS inoutCheck
				, tr_payout_wd_date			AS inoutDate
				, tr_payout_bank			AS bankName
				, tr_payout_account			AS accountNumber
				, tr_payout_account_name	AS accountName
				, c.b_mo_code				AS moCode
				, c.tr_payout_date			AS admitDate
			FROM 
				tb_trade_payment_out AS c
				INNER JOIN 
				tb_trade_priority AS d
				ON 
				c.tr_pr_code = d.tr_pr_code
				LEFT JOIN 
				tb_bid_money AS k
				ON 
				c.b_mo_code = k.b_mo_code
				LEFT JOIN 
				tb_trade_payment_in AS o
				ON 
				c.tr_pr_code = o.tr_pr_code
			WHERE c.tr_payout_check = 'Y'
			UNION ALL 
			SELECT 
				tr_dep_code											AS Code
				, f.announced_code									AS nCode
				, f.b_title											AS nTitle
				, e.m_id											AS Id
				, tr_dep_deposit									AS money
				, if(f.tr_type_code = 4 OR 10,f.b_date_up,null)		AS startDate
				, e.tr_dep_wd_date									AS endDate
				, e.tr_dep_check									AS inoutCheck
				, tr_dep_wd_date									AS inoutDate
				, e.m_account_bank_name								AS bankName
				, e.m_account_number								AS accountNumber
				, m_account_name									AS accountName
				, e.b_mo_code										AS moCode
				, e.tr_dep_date									AS admitDate
			FROM 
				tb_trade_deposit_out AS e
				INNER JOIN 
				tb_bid_list AS f
				ON 
				e.b_code = f.b_code
				LEFT JOIN 
				tb_bid_money AS l
				ON 
				e.b_mo_code = l.b_mo_code
			WHERE e.tr_dep_check = 'Y'
			)	AS result
		WHERE result.Code = #{Code} AND result.moCode IS NULL
	</select>
	
	<!-- 확인 입출금 목록(미완료) -->
	<select id="getMoneyCheckList" resultType="MoneyCheckDTO">
		SELECT
			result.Code											AS Code
			, result.nCode										AS nCode
			, result.nTitle										AS nTitle
			, result.Id											AS Id
			, result.money										AS money
			, if(SUBSTR(result.Code,INSTR(result.Code,'o'),3)='out','출금','입금') AS iOut
			, result.startDate									AS startDate
			, result.endDate									AS endDate
			, result.inoutCheck									AS inoutCheck
			, result.inoutDate									AS inoutDate
			, result.bankName									AS bankName
			, result.accountNumber								AS accountNumber
			, result.accountName								AS accountName
			, result.moCode										AS moCode
			, result.admitDate									AS admitDate
		FROM 
			(
			SELECT 
				b_code													AS Code
				, announced_code										AS nCode
				, b_title												AS nTitle
				, a.m_id												AS Id
				, b_deposit												AS money
				, IFNULL(m.b_cp_date_bidding1, n.b_pl_date_bidding1)	AS startDate
				, IFNULL(m.b_cp_date_bidding2, n.b_pl_date_bidding2)	AS endDate
				, b_deposit_check										AS inoutCheck
				, b_deposit_date										AS inoutDate
				, a.m_account_bank_name									AS bankName
				, a.m_account_number								AS accountNumber
				, a.m_payment_name										AS accountName
				, a.b_mo_code											AS moCode
				, a.b_date												AS admitDate
			FROM 
				tb_bid_list	AS a
				LEFT JOIN 
				tb_bid_money AS i
				ON 
				a.b_mo_code = i.b_mo_code
				left JOIN 
				tb_bid_component AS m
				ON 
				a.announced_code = m.b_cp_code
				LEFT JOIN 
				tb_bid_plant AS n
				ON 
				a.announced_code = n.b_pl_code
			WHERE a.tr_type_name != '입찰실패'
			UNION ALL 
			SELECT
				tr_payin_code				AS Code
				, b.announced_code			AS nCode
				, g.announced_title			AS nTitle
				, b.m_id_buyer				AS Id
				, tr_payin_price			AS money
				, b.tr_payin_date1			AS startDAte
				, b.tr_payin_date2			AS endDate
				, b.tr_payin_check			AS inoutCheck
				, b.b_mo_date				AS inoutDate
				, m_account_bank_name		AS bankName
				, m_account_number			AS accountNumber
				, m_payment_name			AS accountName
				, b.b_mo_code				AS moCode
				, b.tr_payin_date1			AS admitDate
			FROM 
				tb_trade_payment_in AS b
				INNER JOIN 
				tb_trade_priority AS g
				ON
				b.tr_pr_code = g.tr_pr_code
				LEFT JOIN 
				tb_bid_money AS j
				ON 
				b.b_mo_code = j.b_mo_code
			WHERE b.tr_payin_status != '미납'
			UNION ALL 
			SELECT 
				tr_payout_code				AS Code
				, d.announced_code			AS nCode
				, d.announced_title			AS nTitle
				, c.m_id					AS Id
				, tr_payout_price_real		AS money
				, o.b_mo_date				AS startDate
				, c.tr_payout_wd_date		AS endDate
				, c.tr_payout_check			AS inoutCheck
				, tr_payout_wd_date			AS inoutDate
				, tr_payout_bank			AS bankName
				, tr_payout_account			AS accountNumber
				, tr_payout_account_name	AS accountName
				, c.b_mo_code				AS moCode
				, c.tr_payout_date			AS admitDate
			FROM 
				tb_trade_payment_out AS c
				INNER JOIN 
				tb_trade_priority AS d
				ON 
				c.tr_pr_code = d.tr_pr_code
				LEFT JOIN 
				tb_bid_money AS k
				ON 
				c.b_mo_code = k.b_mo_code
				LEFT JOIN 
				tb_trade_payment_in AS o
				ON 
				c.tr_pr_code = o.tr_pr_code
			WHERE c.tr_payout_check = 'Y'
			UNION ALL 
			SELECT 
				tr_dep_code											AS Code
				, f.announced_code									AS nCode
				, f.b_title											AS nTitle
				, e.m_id											AS Id
				, tr_dep_deposit									AS money
				, if(f.tr_type_code = 4 OR 10,f.b_date_up,null)		AS startDate
				, e.tr_dep_wd_date									AS endDate
				, e.tr_dep_check									AS inoutCheck
				, tr_dep_wd_date									AS inoutDate
				, e.m_account_bank_name								AS bankName
				, e.m_account_number								AS accountNumber
				, m_account_name									AS accountName
				, e.b_mo_code										AS moCode
				, e.tr_dep_date									AS admitDate
			FROM 
				tb_trade_deposit_out AS e
				INNER JOIN 
				tb_bid_list AS f
				ON 
				e.b_code = f.b_code
				LEFT JOIN 
				tb_bid_money AS l
				ON 
				e.b_mo_code = l.b_mo_code
			WHERE e.tr_dep_check = 'Y'
			)	AS result
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchKey == null or searchKey == ''.toString()">
				result.moCode IS NULL
				ORDER BY result.admitDate
				LIMIT #{start},#{end}
			</if>
			<if test="searchKey != null and searchKey != ''.toString()">
				result.moCode IS NULL AND 
				<choose>
					<when test="'iOut'.equals(searchKey)">
						if(SUBSTR(result.Code,INSTR(result.Code,'o'),3)='out','출금','입금') LIKE CONCAT('%',#{searchValue},'%')
					</when>
					<otherwise>
						${searchKey} LIKE CONCAT('%',#{searchValue},'%')
					</otherwise>
				</choose>
				ORDER BY result.admitDate
				LIMIT #{start},#{end}
			</if>
		</trim>
	</select>
	
	<!-- 확인 입출금 목록 리스트 수(미완료) -->
	<select id="getMoneyCheckListCnt" resultType="int">
		SELECT
			COUNT(*)
		FROM 
			(
			SELECT 
				b_code													AS Code
				, announced_code										AS nCode
				, b_title												AS nTitle
				, a.m_id												AS Id
				, b_deposit												AS money
				, IFNULL(m.b_cp_date_bidding1, n.b_pl_date_bidding1)	AS startDate
				, IFNULL(m.b_cp_date_bidding2, n.b_pl_date_bidding2)	AS endDate
				, b_deposit_check										AS inoutCheck
				, b_deposit_date										AS inoutDate
				, a.m_account_bank_name									AS bankName
				, a.m_account_number								AS accountNumber
				, a.m_payment_name										AS accountName
				, a.b_mo_code											AS moCode
				, a.b_date												AS admitDate
			FROM 
				tb_bid_list	AS a
				LEFT JOIN 
				tb_bid_money AS i
				ON 
				a.b_mo_code = i.b_mo_code
				left JOIN 
				tb_bid_component AS m
				ON 
				a.announced_code = m.b_cp_code
				LEFT JOIN 
				tb_bid_plant AS n
				ON 
				a.announced_code = n.b_pl_code
			WHERE a.tr_type_name != '입찰실패'
			UNION ALL 
			SELECT
				tr_payin_code				AS Code
				, b.announced_code			AS nCode
				, g.announced_title			AS nTitle
				, b.m_id_buyer				AS Id
				, tr_payin_price			AS money
				, b.tr_payin_date1			AS startDAte
				, b.tr_payin_date2			AS endDate
				, b.tr_payin_check			AS inoutCheck
				, b.b_mo_date				AS inoutDate
				, m_account_bank_name		AS bankName
				, m_account_number			AS accountNumber
				, m_payment_name			AS accountName
				, b.b_mo_code				AS moCode
				, b.tr_payin_date1			AS admitDate
			FROM 
				tb_trade_payment_in AS b
				INNER JOIN 
				tb_trade_priority AS g
				ON
				b.tr_pr_code = g.tr_pr_code
				LEFT JOIN 
				tb_bid_money AS j
				ON 
				b.b_mo_code = j.b_mo_code
			WHERE b.tr_payin_status != '미납'
			UNION ALL 
			SELECT 
				tr_payout_code				AS Code
				, d.announced_code			AS nCode
				, d.announced_title			AS nTitle
				, c.m_id					AS Id
				, tr_payout_price_real		AS money
				, o.b_mo_date				AS startDate
				, c.tr_payout_wd_date		AS endDate
				, c.tr_payout_check			AS inoutCheck
				, tr_payout_wd_date			AS inoutDate
				, tr_payout_bank			AS bankName
				, tr_payout_account			AS accountNumber
				, tr_payout_account_name	AS accountName
				, c.b_mo_code				AS moCode
				, c.tr_payout_date			AS admitDate
			FROM 
				tb_trade_payment_out AS c
				INNER JOIN 
				tb_trade_priority AS d
				ON 
				c.tr_pr_code = d.tr_pr_code
				LEFT JOIN 
				tb_bid_money AS k
				ON 
				c.b_mo_code = k.b_mo_code
				LEFT JOIN 
				tb_trade_payment_in AS o
				ON 
				c.tr_pr_code = o.tr_pr_code
			WHERE c.tr_payout_check = 'Y'
			UNION ALL 
			SELECT 
				tr_dep_code											AS Code
				, f.announced_code									AS nCode
				, f.b_title											AS nTitle
				, e.m_id											AS Id
				, tr_dep_deposit									AS money
				, if(f.tr_type_code = 4 OR 10,f.b_date_up,null)		AS startDate
				, e.tr_dep_wd_date									AS endDate
				, e.tr_dep_check									AS inoutCheck
				, tr_dep_wd_date									AS inoutDate
				, e.m_account_bank_name								AS bankName
				, e.m_account_number								AS accountNumber
				, m_account_name									AS accountName
				, e.b_mo_code										AS moCode
				, e.tr_dep_date									AS admitDate
			FROM 
				tb_trade_deposit_out AS e
				INNER JOIN 
				tb_bid_list AS f
				ON 
				e.b_code = f.b_code
				LEFT JOIN 
				tb_bid_money AS l
				ON 
				e.b_mo_code = l.b_mo_code
			WHERE e.tr_dep_check = 'Y'
			)	AS result
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchKey == null or searchKey == ''.toString()">
				result.moCode IS NULL
			</if>
			<if test="searchKey != null and searchKey != ''.toString()">
				result.moCode IS NULL AND 
				<choose>
					<when test="'iOut'.equals(searchKey)">
						if(SUBSTR(result.Code,INSTR(result.Code,'o'),3)='out','출금','입금') LIKE CONCAT('%',#{searchValue},'%')
					</when>
					<otherwise>
						${searchKey} LIKE CONCAT('%',#{searchValue},'%')
					</otherwise>
				</choose>
			</if>
		</trim>
	</select>
	
	<!-- 관리자계좌 입출금 내역 조회 -->
	<select id="getBidMoneyList" resultMap="bidmoneyResultMap">
		SELECT 
			b_mo_code
			, related_code
			, m_id
			, b_mo_type
			, related_table
			, b_mo_amount
			, b_mo_detail
			, m_id_manager
			, if(b_mo_type='입금',(@total := @total + b_mo_amount),(@total := @total - b_mo_amount)) AS total
			, b_mo_totalmoney
			, b_mo_date
		FROM 
			tb_bid_money
			JOIN 
			(SELECT @total := 0) AS r
		<if test="searchKey == null or searchKey == ''.toString()">
			ORDER BY b_mo_date
			LIMIT #{start},#{end}
		</if>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchKey != null and searchKey != ''.toString()">
				${searchKey} LIKE CONCAT('%',#{searchValue},'%')
				ORDER BY b_mo_date
				LIMIT #{start},#{end}
			</if>
		</trim>
	</select>
	
	<!-- 관리자계좌 입출금 내역 리스트 수 조회 -->
	<select id="getBidMoneyListCnt" resultType="int">
		SELECT 
			COUNT(*)
		FROM 
			tb_bid_money
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchKey != null and searchKey != ''.toString()">
				${searchKey} LIKE CONCAT('%',#{searchValue},'%')
			</if>
		</trim>
	</select>
</mapper>